using LitJsonEx;

//深度学习AI对游戏的驱动消息
public sealed class MLGameInputRsp : MLAIProtoBase
{
    //消息ID， 1：Reset, 2：Step
    public int iCmd = 1;

    //版本
    public int iVersion = 0;

    public override void ReadFrom(JsonData data)
    {
        iCmd = (int)data["Cmd"];
        iVersion = (int)data["ver"];
    }
}

public enum E_ML_ACTION_ID
{
    ACTION_NONE,
    #region 正常的ActionID

    Equip_Equipment_Action,

    #endregion
    ACTION_UNRECOGNIZED,
}

//AI 操作消息
public sealed class MLGameActionMsg : MLAIProtoBase
{
    
    public E_ML_ACTION_ID eActionID = E_ML_ACTION_ID.ACTION_NONE;

    public JsonData actionData = null;

    public override void ReadFrom(JsonData data)
    {
        //ActionID
        int actionID = ValidField(data, "eActionID", JsonType.Int) ? (int)data["eActionID"] : 0;
        if (actionID <= 0)
        {
            eActionID = E_ML_ACTION_ID.ACTION_NONE;
        }
        else if (actionID >= (int)E_ML_ACTION_ID.ACTION_UNRECOGNIZED)
        {
            eActionID = E_ML_ACTION_ID.ACTION_UNRECOGNIZED;
        }
        else
        {
            eActionID = (E_ML_ACTION_ID)actionID;
        }

        //
        actionData = ValidField(data, "actionData", JsonType.Object) ? data["actionData"] : new JsonData();
    }

    public override void WriteTo(JsonData data)
    {
        data["eActionID"] = (int)eActionID;
        data["actionData"] = actionData;
    }
}


//